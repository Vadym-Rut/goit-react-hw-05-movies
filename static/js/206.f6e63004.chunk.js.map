{"version":3,"file":"static/js/206.f6e63004.chunk.js","mappings":"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","sources":["components/MovieMainInfo/MovieMainInfo.styled.jsx","components/MovieMainInfo/MovieMainInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/AddInfo/AddInfo.styled.jsx","components/AddInfo/AddInfo.jsx","pages/MovieDetails.jsx","services/ApiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  display: flex;\n  padding: 10px;\n  border-bottom: 3px solid gray;\n  line-height: 1.5;\n\n  & img {\n    margin-right: 15px;\n  }\n\n  & span {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Section } from './MovieMainInfo.styled';\nimport defaultImage from 'images/default_img_1.jpg';\n\nconst MovieMainInfo = ({ details }) => {\n  const {\n    poster_path,\n    original_title,\n    title,\n    overview,\n    genres,\n    release_date,\n    vote_average,\n  } = details;\n\n  return (\n    <Section>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultImage\n        }\n        alt={original_title}\n        width=\"300\"\n        height=\"450\"\n      />\n      <div>\n        <h2>{`${original_title || title} (${release_date.slice(0, 4)})`}</h2>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>\n          {genres.map(({ id, name }) => (\n            <span key={id}>{name}</span>\n          ))}\n        </p>\n      </div>\n    </Section>\n  );\n};\n\nexport default MovieMainInfo;\n\nMovieMainInfo.propTypes = {\n  details: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #54c7a4;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n    border-bottom: 3px solid gray;\n\n    & p {\n        font-weight: 500;\n        font-size: 20px;\n    }\n\n    & a {\n        text-decoration: none;\n        font-weight: 500;\n        color: #120d2b;\n\n        :hover,\n        :focus {\n            color: #6fc6d1;\n        }\n    }       \n`;","import { Link } from 'react-router-dom';\nimport { Section } from './AddInfo.styled';\n\nconst AddInfo = () => {\n  return (\n    <Section>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </Section>\n  );\n};\n\nexport default AddInfo;\n","import { toast } from 'react-toastify';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as API from 'services/ApiService';\nimport MovieMainInfo from 'components/MovieMainInfo/MovieMainInfo';\nimport BackLink from 'components/BackLink/BackLink';\nimport AddInfo from 'components/AddInfo/AddInfo';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDitails = () => {\n  const [details, setDetails] = useState(null);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  const getMovieDetails = async id => {\n    setIsLoading(true);\n    try {\n      const movieDetails = await API.getMovieById(id);\n      if (movieDetails === {}) {\n        return toast.error(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      }\n\n      setDetails(movieDetails);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n      {details && <MovieMainInfo details={details} />}\n      {isLoading && <Loader />}\n      <AddInfo />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      {error &&\n        toast.error(\n          'Oops, an error occurred while loading the page. Please try reloading the page'\n        )}\n    </div>\n  );\n};\n\nexport default MovieDitails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f2fae09050301062329c7f99a1fba61d';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieSubInfo = async (id, option) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/${option}?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["Section","styled","details","poster_path","original_title","title","overview","genres","release_date","vote_average","src","defaultImage","alt","width","height","slice","Math","round","map","id","name","StyledLink","Link","to","children","size","useState","setDetails","error","setError","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","isLoading","setIsLoading","useEffect","getMovieDetails","API","movieDetails","toast","current","Loader","Suspense","fallback","BASE_URL","KEY","getTrendingMovies","axios","response","data","getMoviesByQuery","query","getMovieById","getMovieSubInfo","option"],"sourceRoot":""}