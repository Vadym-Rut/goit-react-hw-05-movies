{"version":3,"file":"static/js/540.6eb02a03.chunk.js","mappings":"yVAmEA,EA5Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACHN,GAILO,EAAaP,EAAS,UACvB,GAAE,CAACA,IAEJ,IAAMO,EAAY,mCAAG,WAAOC,EAAIC,GAAX,8EACnBJ,GAAa,GADM,kBAGOK,EAAAA,GAAoBF,EAAIC,GAH/B,UAIa,KADxBE,EAHW,QAIHb,KAAKc,OAJF,yCAKRC,EAAAA,GAAAA,MAAY,sCALJ,OAQjBd,EAAQY,EAAUb,MARD,kDAUjBK,EAAS,EAAD,IAVS,yBAYjBE,GAAa,GAZI,6EAAH,wDAgBlB,OACE,2BACGP,IACC,wBACGA,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,2BACE,gBACEC,IACED,EAAY,0CAC2BA,GACnCE,EAENC,IAAKL,EACLM,MAAO,OAET,uBAAIN,KACJ,uCAAeC,OAXRF,EADD,MAiBbX,IAAa,SAACmB,EAAA,EAAD,IACbrB,GACCW,EAAAA,GAAAA,MACE,mFAIT,C,2KC/DKW,EAAW,gCACXC,EAAM,mCAECC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFZ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qDAQjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC2BM,IAFpB,cACxBH,EADwB,yBAKvBA,EAASC,MALc,2CAAH,sDAQhBG,EAAY,mCAAG,WAAMxB,GAAN,uFACHmB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BhB,EAA9B,oBAA4CiB,IADzC,cACpBG,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZI,EAAe,mCAAG,WAAOzB,EAAIC,GAAX,uFACNkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDhB,EADC,YACKC,EADL,oBACuBgB,IAFjB,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,uD","sources":["components/Cast/Cast.jsx","services/ApiService.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/ApiService';\nimport Loader from 'components/Loader/Loader';\nimport defaultImage from 'images/default_actor_img.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    getMovieCast(movieId, 'credits');\n  }, [movieId]);\n\n  const getMovieCast = async (id, option) => {\n    setIsLoading(true);\n    try {\n      const movieCast = await API.getMovieSubInfo(id, option);\n      if (movieCast.cast.length === 0) {\n        return toast.error('Sorry, we didn`t find any actors.');\n      }\n\n      setCast(movieCast.cast);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {cast && (\n        <ul>\n          {cast.map(({ cast_id, name, character, profile_path }) => (\n            <li key={cast_id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImage\n                }\n                alt={name}\n                width={150}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {isLoading && <Loader />}\n      {error &&\n        toast.error(\n          'Oops, an error occurred while loading the page. Please try reloading the page'\n        )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f2fae09050301062329c7f99a1fba61d';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieSubInfo = async (id, option) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/${option}?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","error","setError","isLoading","setIsLoading","useEffect","getMovieCast","id","option","API","movieCast","length","toast","map","cast_id","name","character","profile_path","src","defaultImage","alt","width","Loader","BASE_URL","KEY","getTrendingMovies","axios","response","data","getMoviesByQuery","query","getMovieById","getMovieSubInfo"],"sourceRoot":""}